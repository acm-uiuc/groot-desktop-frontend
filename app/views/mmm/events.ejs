<%- include('../_partials/header') -%>

<%
    // Session info for debug
    console.log("sesson", session)
%>

<!-- React mounting div -->
<div id="react-mount"></div>

<script crossorigin src="https://unpkg.com/react@16/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
<!--
<script crossorigin src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.21.1/babel.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/core/main.min.js" integrity="sha256-GBryZPfVv8G3K1Lu2QwcqQXAO4Szv4xlY4B/ftvyoMI=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/daygrid/main.min.js" integrity="sha256-FT1eN+60LmWX0J8P25UuTjEEE0ZYvpC07nnU6oFKFuI=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/core/main.min.css" integrity="sha256-Lfe6+s5LEek8iiZ31nXhcSez0nmOxP+3ssquHMR3Alo=" crossorigin="anonymous" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/daygrid/main.min.css" integrity="sha256-AVsv7CEpB2Y1F7ZjQf0WI8SaEDCycSk4vnDRt0L2MNQ=" crossorigin="anonymous" />

<!-- EJS connection -->
<script type="text/javascript">
    const config = {
        authenticated: "<%= authenticated %>" === "true",
        student: {
            netid: "<%= authenticated ? session.student.netid : '' %>",
            firstName: "<%= authenticated ? session.student.firstName : '' %>",
            lastName: "<%= authenticated ? session.student.lastName : '' %>"
        },
        sigs: <%- JSON.parse(JSON.stringify(sigs)) %>
    };

    config.sigs.unshift({
        name: "Select one"
    });

    console.log(config);
</script>

<!-- Client-side React -->
<script type="text/babel">
    const EventCalendar = ({ events }) => {
        React.useEffect(() => {
            const calendarEl = document.getElementById('calendar-mount');

            const calendar = new FullCalendar.Calendar(calendarEl, {
                plugins: ['dayGrid']
            });

            calendar.render();
        }, [events]);

        return <div id="calendar-mount" />;
    };

    const Header = ({ name }) => {
        return (
            <React.Fragment>
                <p style={styles.greeting}>Hello {name}</p>
                <p style={styles.title}>Choose an Organization:</p>
            </React.Fragment>
        );
    };

    const SigSelector = ({ sigs, value, onChange }) => {
        return (
            <select value={value} onChange={onChange}>
                {
                    sigs.map(sig => <option key={sig.name} value={sig.name}>{sig.name}</option>)
                }
            </select>
        )
    };

    const CreateForm = ({ sigs }) => {
        const [sigName, setSigName] = React.useState("Select one");
        const [eventTitle, setEventTitle] = React.useState("");

        const handleSubmit = () => {
            event.preventDefault();
        };

        return (
            <div>
                <form onSubmit={handleSubmit}>
                    <SigSelector sigs={sigs} value={sigName} onChange={(e) => setSigName(e.target.value)} />

                    {/* <input type="text" value={eventTitle} onChange={(e) => setEventTitle(e.target.value)} /> */}
                </form>
            </div>
        )
    };

    const App = ({ config }) => {
        const [events, setEvents] = React.useState([]);

        React.useEffect(() => {
            // TODO: API calls
        }, []);

        return (
            <div style={styles.container}>
                <EventCalendar events={events} />

                <Header name={config.student.firstName} />
                <CreateForm sigs={config.sigs} />
            </div>
        )
    }

    ReactDOM.render(
        <App config={config} />,
        document.getElementById('react-mount')
    );
</script>

<!-- Fonts -->
<link href="https://fonts.googleapis.com/css?family=Open+Sans:700&display=swap" rel="stylesheet">

<!-- Styles -->
<script type="text/javascript">
    const styles = {
        container: {
            padding: 50
        },
        greeting: {
            marginTop: 40,
            fontFamily: 'Open Sans',
            fontWeight: 700,
            textTransform: "uppercase",
            fontSize: 14,
            lineHeight: 0.5
        },
        title: {
            fontSize: 28,
            lineHeight: 1,
            fontWeight: 700,
            color: "black"
        }
    }
</script>

<style>
    .fc-bg > table {
        margin-bottom: 0 !important;
    }
</style>